{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jackh\\\\Downloads\\\\WebProgrammingProject\\\\music\\\\src\\\\Components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginError, setLoginError] = useState('');\n  const handleLogin = async event => {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    let email = formData.get(\"email\");\n    let password = formData.get(\"password\");\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (email == \"\" || password == \"\") {\n      alert(\"Error: Forms left blank.\");\n    } else if (!re.test(email)) {\n      alert(\"Error: Incorrect email format.\");\n    } else {\n      try {\n        const response = await fetch(`http://localhost:3000/login`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`Error:\n        ${response.statusText}`);\n        }\n        const {\n          token\n        } = await response.json();\n        localStorage.setItem('jwt', token);\n      } catch (error) {\n        setLoginError('Failed to login. Please check your credentials.');\n        console.error('Login failed:', error);\n      }\n    }\n  };\n  const handleAccountCreation = async event => {\n    event.preventDefault();\n    try {\n      window.location.pathname = \"/create\";\n    } catch (error) {\n      setLoginError('Failed to create new account.');\n      console.error('Account creation failed:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n        charSet: \"UTF-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"viewport\",\n        content: \"width=device-width, initial-scale=1.0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Index\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginbox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Login \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleLogin,\n            className: \"loginform\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \" Email: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"emailForm\",\n              type: \"email\",\n              name: \"email\",\n              id: \"email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 7\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 85\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"passwordText\",\n              htmlFor: \"password\",\n              children: \" Password: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"passwordForm\",\n              type: \"text\",\n              name: \"password\",\n              id: \"password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \" Submit \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onSubmit: handleAccountCreation,\n            children: \" Create Account \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"Y8YW+6i6wUzEmYTyVI4YwxbpMyA=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","email","setEmail","password","setPassword","loginError","setLoginError","handleLogin","event","preventDefault","formData","FormData","target","get","re","alert","test","response","fetch","method","headers","body","JSON","stringify","ok","Error","statusText","token","json","localStorage","setItem","error","console","handleAccountCreation","window","location","pathname","className","children","charSet","fileName","_jsxFileName","lineNumber","columnNumber","name","content","onSubmit","htmlFor","type","id","required","_c","$RefreshReg$"],"sources":["C:/Users/jackh/Downloads/WebProgrammingProject/music/src/Components/Login.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport '../App.css';\r\n\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loginError, setLoginError] = useState('');\r\n    const handleLogin = async (event) => {\r\n      event.preventDefault();\r\n    const formData = new FormData(event.target);\r\nlet email = formData.get(\"email\");\r\nlet password = formData.get(\"password\");\r\nconst re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\nif (email == \"\" || password == \"\")\r\n{\r\n    alert(\"Error: Forms left blank.\")\r\n}\r\nelse if (!re.test(email))\r\n{\r\n  alert(\"Error: Incorrect email format.\")\r\n}\r\nelse {\r\n      try {\r\n        const response = await fetch(`http://localhost:3000/login`,\r\n        {\r\n        method: 'POST',\r\n        headers: {\r\n        'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n        });\r\n        if (!response.ok) {\r\n        throw new Error(`Error:\r\n        ${response.statusText}`);\r\n        }\r\n        const { token } = await response.json();\r\n  localStorage.setItem('jwt', token);\r\n}\r\ncatch (error) {\r\n  setLoginError('Failed to login. Please check your credentials.');\r\n  console.error('Login failed:', error);\r\n  }\r\n  }\r\n};\r\n  const handleAccountCreation = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\nwindow.location.pathname = \"/create\";\r\n}\r\ncatch (error) {\r\nsetLoginError('Failed to create new account.');\r\nconsole.error('Account creation failed:', error);\r\n}\r\n};\r\n  return (\r\n    <div className=\"App\">\r\n      <>\r\n  <meta charSet=\"UTF-8\" />\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n  <title>Index</title>\r\n  <div className=\"loginbox\">\r\n    <div className=\"login\">\r\n        <h2> Login </h2>\r\n    <form onSubmit={handleLogin} className='loginform'>\r\n      <label htmlFor=\"email\"> Email: </label>\r\n      <input className=\"emailForm\" type=\"email\" name=\"email\" id=\"email\" required /> <br />\r\n      <label className=\"passwordText\" htmlFor=\"password\" > Password: </label>\r\n      <input className=\"passwordForm\" type=\"text\" name=\"password\" id=\"password\" required />\r\n      <br />\r\n      <button type=\"submit\"> Submit </button>\r\n    </form>\r\n    <button type=\"submit\" onSubmit={handleAccountCreation}> Create Account </button>\r\n    </div>\r\n  </div>\r\n    </>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}